// program             := statement*
// 
// statement           := letStatement
//                      | returnStatement
//                      | expressionStatement
// 
// letStatement        := "let" identifier "=" expression ";"
// 
// returnStatement     := "return" expression ";"
// 
// expressionStatement := expression ";"
// 
// expression          := identifier
//                      | integerLiteral
//                      | booleanLiteral
//                      | stringLiteral
//                      | prefixExpression
//                      | infixExpression
//                      | ifExpression
//                      | functionLiteral
//                      | callExpression
//                      | groupedExpression
// 
// prefixExpression    := ("!" | "-") expression  
// 
// infixExpression     := expression operator expression
// 
// ifExpression        := "if" "(" expression ")" blockStatement ("else" blockStatement)?
// 
// functionLiteral     := "fn" "(" parameters? ")" blockStatement
// 
// callExpression      := expression "(" arguments? ")"
// 
// groupedExpression   := "(" expression ")"
// 
// blockStatement      := "{" statement* "}"
// 
// parameters          := identifier ("," identifier)*
// 
// arguments           := expression ("," expression)*
// 
// operator            := "+" | "-" | "*" | "/" 
//                      | "==" | "!=" 
//                      | "<" | ">"
// 